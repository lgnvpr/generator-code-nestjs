[{"/home/lgnvpr/Documents/template/react-template/src/index.tsx":"1","/home/lgnvpr/Documents/template/react-template/src/reportWebVitals.ts":"2","/home/lgnvpr/Documents/template/react-template/src/rematch/store.ts":"3","/home/lgnvpr/Documents/template/react-template/src/App.tsx":"4","/home/lgnvpr/Documents/template/react-template/src/rematch/index.ts":"5","/home/lgnvpr/Documents/template/react-template/src/constanst/routers.tsx":"6","/home/lgnvpr/Documents/template/react-template/src/rematch/LoadingTop.ts":"7","/home/lgnvpr/Documents/template/react-template/src/rematch/Notification.ts":"8","/home/lgnvpr/Documents/template/react-template/src/rematch/authen.ts":"9","/home/lgnvpr/Documents/template/react-template/src/rematch/Type.ts":"10"},{"size":375,"mtime":1609767424867,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1609766353791,"results":"13","hashOfConfig":"12"},{"size":1076,"mtime":1614848591341,"results":"14","hashOfConfig":"12"},{"size":658,"mtime":1609810168890,"results":"15","hashOfConfig":"12"},{"size":555,"mtime":1614848841324,"results":"16","hashOfConfig":"12"},{"size":601,"mtime":1609811079771,"results":"17","hashOfConfig":"12"},{"size":619,"mtime":1614848792969,"results":"18","hashOfConfig":"12"},{"size":1646,"mtime":1614848794921,"results":"19","hashOfConfig":"12"},{"size":1182,"mtime":1614848500546,"results":"20","hashOfConfig":"12"},{"size":772,"mtime":1614848500546,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"16lov8k",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lgnvpr/Documents/template/react-template/src/index.tsx",[],["49","50"],"/home/lgnvpr/Documents/template/react-template/src/reportWebVitals.ts",[],"/home/lgnvpr/Documents/template/react-template/src/rematch/store.ts",["51"],"import { init, RematchDispatch, RematchRootState } from \"@rematch/core\";\nimport {  ActionRematch, models } from \"./index\";\nimport { reducer as formReducer } from 'redux-form';\n\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport createLoadingPlugin from '@rematch/loading';\nimport { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory()\nconst options = {};\nconst loading = createLoadingPlugin(options);\nexport const store = init({\n   redux: {\n      reducers:{\n          router: connectRouter(history),\n          form:formReducer\n      },\n      middlewares: [\n          routerMiddleware(history)\n      ],\n      rootReducers: {\n          RESET_APP: (state,payload) => undefined\n      },\n      devtoolOptions: {\n          disabled: process.env.NODE_ENV === 'production',\n      }\n  },\n   models: models,\n   plugins: [\n      loading\n  ]\n})\n\nexport type Store = typeof store\nexport type Dispatch = ActionRematch\nexport type AppState = RematchRootState<any>\n\n\n\nexport const  dispatch: Dispatch  = store.dispatch as any\n\n\n\n","/home/lgnvpr/Documents/template/react-template/src/App.tsx",[],"/home/lgnvpr/Documents/template/react-template/src/rematch/index.ts",["52"],"/home/lgnvpr/Documents/template/react-template/src/constanst/routers.tsx",["53"],"import * as links from \"./links\"\nimport React from 'react';\nimport { RouteComponentProps, StaticContext } from \"react-router\";\nexport const routes: Routers[] = [\n\t// {\n\t// \turl: links.DASHBOARD,\n\t// \tcomponent:  {} as any,\n\t// \texact: true,\n\t// },\n];\n\ninterface Routers {\n    url: string | string[] | undefined;\n\tcomponent : React.ComponentClass<any, any> | React.FunctionComponent<any> | React.ComponentClass<RouteComponentProps<any, StaticContext, any>, any> ;\n\texact : boolean;\n\tsensitive ?: boolean; // Phân biệt hoa thường\n\tstrict ?:boolean // xác định đường dẫn nghiêm ngặt\n}\n","/home/lgnvpr/Documents/template/react-template/src/rematch/LoadingTop.ts",["54"],"import { createModel } from \"@rematch/core\";\nimport { createNewModel } from \"./Type\";\n\nexport interface ActionLoadingTop {\n  showLoad:()=>void\n  hiddenLoad:()=> void\n}\n\nexport const loadingTop = createNewModel<boolean , ActionLoadingTop>({\n  state: false,\n  reducers: {\n    update(state: any, data: boolean = false) {\n      return data\n      // return state;\n    },\n  },\n  effects: (dispatch) => ({\n    showLoad() {\n      const loading: boolean = true;\n      dispatch.loadingTop.update(loading)\n    },\n    hiddenLoad() {\n      const loading: boolean = false;\n      dispatch.loadingTop.update(loading)\n\n    }\n\n  }),\n});\n","/home/lgnvpr/Documents/template/react-template/src/rematch/Notification.ts",["55"],"import { createModel } from \"@rematch/core\";\nimport { VariantType } from \"notistack\";\nimport { createNewModel } from \"./Type\";\n\n\nexport type NotificationModel = {\n\tmessage?: string;\n\tvariant?: VariantType;\n\tlatestAt?: Date;\n};\n\nexport interface NotificationAction  {\n\terror: (message: string, state?: any) => void\n\n\tsuccess:(message: string, state?: any) => void\n\n\tinfo: (message: string, state?: any) => void\n};\n\nexport enum VariantTypeEnum {\n\tdefault = \"default\",\n\tsuccess = \"success\",\n\terror = \"error\",\n\twarning = \"warning\",\n\tinfo = \"info\",\n}\n\n\n\nexport const notification = createNewModel<NotificationModel, NotificationAction>({\n\tstate:  {\n\t\tlatestAt: new Date(),\n\t\tmessage: \"\",\n\t\tvariant: \"success\"\n\t},\n\treducers: {\n\t\tupdate(state: NotificationModel, data: any = {}) {\n\t\t\tstate = {\n\t\t\t\t...state,\n\t\t\t\t...data,\n\t\t\t};\n\t\t\treturn state;\n\t\t},\n\t},\n\teffects: (dispatch) => ({\n\t\terror(message: string, state?: any) {\n\t\t\tconst updatedState: NotificationModel = {\n\t\t\t\t...state.notification,\n\t\t\t\tmessage: message,\n\t\t\t\tvariant: VariantTypeEnum.error,\n\t\t\t\tlatestAt: new Date(),\n\t\t\t};\n\t\t\tdispatch.notification.update(updatedState);\n\t\t},\n\n\t\tsuccess(message: string, state: any) {\n\t\t\tconst updatedState: NotificationModel = {\n\t\t\t\t...state.notification,\n\t\t\t\tmessage: message,\n\t\t\t\tvariant: VariantTypeEnum.success,\n\t\t\t\tlatestAt: new Date(),\n\t\t\t};\n\t\t\tdispatch.notification.update(updatedState);\n\t\t},\n\n\t\tinfo(message: string, state: any) {\n\t\t\tconst updatedState: NotificationModel = {\n\t\t\t\t...state.notification,\n\t\t\t\tmessage: VariantTypeEnum.info,\n\t\t\t\tvariant: message,\n\t\t\t\tlatestAt: new Date(),\n\t\t\t};\n\t\t\tdispatch.notification.update(updatedState);\n\t\t},\n\t}),\n});\n","/home/lgnvpr/Documents/template/react-template/src/rematch/authen.ts",["56","57","58","59"],"import { User } from \"src/submodules/model-shopping/model/User\";\nimport { createModel, ModelConfig } from \"@rematch/core\";\nimport { dispatch } from \"./store\";\nimport { appClient } from \"src/controller\";\nimport { createNewModel } from \"./Type\";\n\nexport type AuthenModel = {\n\tuser?: User;\n\tisAuthen: boolean;\n};\n\nexport type ActionAuthen = {\n\tlogin: (user: User, state?: any) => void; // todo : check any\n\tlogout: (state?: any) => void;\n};\n\nexport const authen = createNewModel<AuthenModel, ActionAuthen>({\n\tstate: {\n\t\tisAuthen: true,\n\t},\n\treducers: {\n\t\tupdate(state: AuthenModel, payload: AuthenModel) {\n\t\t\tstate = {\n\t\t\t\t...state,\n\t\t\t\t...payload,\n\t\t\t};\n\t\t\tconsole.log(state);\n\t\t\treturn state;\n\t\t},\n\t},\n\teffects: (dispatch) => ({\n\t\tasync login(user: User, state) {\n\t\t\tconsole.log(user.token)\n\t\t\t\n\t\t\tawait global.localStorage.setItem(\"token\", user.token || \"\");\n\t\t\tawait global.localStorage.setItem(\"userId\", user.id || \"\")\n\t\t\tconst authen: AuthenModel = {\n\t\t\t\tuser: user,\n\t\t\t\tisAuthen: true,\n\t\t\t};\n\t\t\tdispatch.authen.update(authen)\n\t\t\twindow.location.href =\"/products\"\n\t\t},\n\t\tlogout() {\n\t\t\tglobal.localStorage.setItem(\"JWT\", \"\" || \"\");\n\t\t\twindow.location.href =\"/login\"\n\t\t},\n\t}),\n});\n",["60","61"],"/home/lgnvpr/Documents/template/react-template/src/rematch/Type.ts",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":16,"nodeType":"68","messageId":"69","endLine":1,"endColumn":31},{"ruleId":"66","severity":1,"message":"70","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":26},{"ruleId":"66","severity":1,"message":"71","line":1,"column":13,"nodeType":"68","messageId":"69","endLine":1,"endColumn":18},{"ruleId":"66","severity":1,"message":"72","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":21},{"ruleId":"66","severity":1,"message":"72","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":21},{"ruleId":"66","severity":1,"message":"72","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":21},{"ruleId":"66","severity":1,"message":"73","line":2,"column":23,"nodeType":"68","messageId":"69","endLine":2,"endColumn":34},{"ruleId":"66","severity":1,"message":"74","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":18},{"ruleId":"66","severity":1,"message":"75","line":4,"column":10,"nodeType":"68","messageId":"69","endLine":4,"endColumn":19},{"ruleId":"62","replacedBy":"76"},{"ruleId":"64","replacedBy":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'RematchDispatch' is defined but never used.","Identifier","unusedVar","'ActionLoadingTop' is defined but never used.","'links' is defined but never used.","'createModel' is defined but never used.","'ModelConfig' is defined but never used.","'dispatch' is defined but never used.","'appClient' is defined but never used.",["78"],["79"],"no-global-assign","no-unsafe-negation"]